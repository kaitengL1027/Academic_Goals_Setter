{"ast":null,"code":"var _jsxFileName = \"/Users/kai-tenglo/Desktop/lighthouse/starting-project/src/data/CoursesContextProvider.tsx\";\nimport React, { useState } from 'react';\nimport CoursesContext from './courses-context';\n\nconst CoursesContextProvider = props => {\n  const [courses, setCourses] = useState([{\n    id: 'c1',\n    title: 'React - The Complete Guide',\n    enrolled: new Date(),\n    goals: []\n  }]);\n\n  const addCourse = (title, date) => {\n    const newCourse = {\n      id: Math.random().toString(),\n      title,\n      enrolled: date,\n      goals: []\n    };\n    setCourses(prev => prev.concat(newCourse));\n  };\n\n  const addGoal = () => {};\n\n  const deleteGoal = () => {};\n\n  const updateGoal = () => {};\n\n  return /*#__PURE__*/React.createElement(CoursesContext.Provider, {\n    value: {\n      courses,\n      addGoal,\n      addCourse,\n      deleteGoal,\n      updateGoal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, props.children);\n};\n\nexport default CoursesContextProvider;","map":{"version":3,"sources":["/Users/kai-tenglo/Desktop/lighthouse/starting-project/src/data/CoursesContextProvider.tsx"],"names":["React","useState","CoursesContext","CoursesContextProvider","props","courses","setCourses","id","title","enrolled","Date","goals","addCourse","date","newCourse","Math","random","toString","prev","concat","addGoal","deleteGoal","updateGoal","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,cAAP,MAAuC,mBAAvC;;AAEA,MAAMC,sBAAgC,GAAIC,KAAD,IAAW;AAClD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAW,CAC/C;AACEM,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,4BAFT;AAGEC,IAAAA,QAAQ,EAAE,IAAIC,IAAJ,EAHZ;AAIEC,IAAAA,KAAK,EAAE;AAJT,GAD+C,CAAX,CAAtC;;AASA,QAAMC,SAAS,GAAG,CAACJ,KAAD,EAAgBK,IAAhB,KAA+B;AAC/C,UAAMC,SAAiB,GAAG;AACxBP,MAAAA,EAAE,EAAEQ,IAAI,CAACC,MAAL,GAAcC,QAAd,EADoB;AAExBT,MAAAA,KAFwB;AAGxBC,MAAAA,QAAQ,EAAEI,IAHc;AAIxBF,MAAAA,KAAK,EAAE;AAJiB,KAA1B;AAOAL,IAAAA,UAAU,CAACY,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAYL,SAAZ,CAAT,CAAV;AACD,GATD;;AAWA,QAAMM,OAAO,GAAG,MAAM,CAAE,CAAxB;;AAEA,QAAMC,UAAU,GAAG,MAAM,CAAE,CAA3B;;AAEA,QAAMC,UAAU,GAAG,MAAM,CAAE,CAA3B;;AAEA,sBAAO,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACjB,MAAAA,OAAD;AAAUe,MAAAA,OAAV;AAAmBR,MAAAA,SAAnB;AAA8BS,MAAAA,UAA9B;AAA0CC,MAAAA;AAA1C,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyFlB,KAAK,CAACmB,QAA/F,CAAP;AACD,CA5BD;;AA8BA,eAAepB,sBAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport CoursesContext, { Course } from './courses-context';\n\nconst CoursesContextProvider: React.FC = (props) => {\n  const [courses, setCourses] = useState<Course[]>([\n    {\n      id: 'c1', \n      title: 'React - The Complete Guide', \n      enrolled: new Date(),\n      goals: []\n    }\n  ]);\n\n  const addCourse = (title: string, date: Date) => {\n    const newCourse: Course = {\n      id: Math.random().toString(), \n      title, \n      enrolled: date, \n      goals: []\n    };\n\n    setCourses(prev => prev.concat(newCourse));\n  };\n\n  const addGoal = () => {};\n\n  const deleteGoal = () => {};\n\n  const updateGoal = () => {};\n\n  return <CoursesContext.Provider value={{courses, addGoal, addCourse, deleteGoal, updateGoal}} >{props.children}</CoursesContext.Provider>;\n};\n\nexport default CoursesContextProvider;"]},"metadata":{},"sourceType":"module"}