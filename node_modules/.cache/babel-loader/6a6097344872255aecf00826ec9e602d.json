{"ast":null,"code":"var _jsxFileName = \"/Users/kai-tenglo/Desktop/lighthouse/starting-project/src/components/EditModal.tsx\";\nimport React, { useRef, useState } from \"react\";\nimport { IonModal, IonToolbar, IonTitle, IonHeader, IonContent, IonButton, IonGrid, IonRow, IonCol, IonItem, IonLabel, IonInput, IonText } from \"@ionic/react\";\n\nconst EditModal = props => {\n  var _props$editedGoal;\n\n  const [error, setError] = useState(\"\");\n  const textRef = useRef(null);\n\n  const saveHandler = () => {\n    const enteredText = textRef.current.value;\n\n    if (!enteredText || enteredText.toString().trim().length === 0) {\n      setError(\"Please give it a valid title\");\n      return;\n    }\n\n    props.onSave(enteredText.toString());\n  };\n\n  return /*#__PURE__*/React.createElement(IonModal, {\n    isOpen: props.show,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, props.editedGoal ? \"Edit\" : \"Add\", \" Goal\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"floating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Your Goal\"), /*#__PURE__*/React.createElement(IonInput, {\n    type: \"text\",\n    value: (_props$editedGoal = props.editedGoal) === null || _props$editedGoal === void 0 ? void 0 : _props$editedGoal.text,\n    ref: textRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })))), error && /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonText, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, error)))), /*#__PURE__*/React.createElement(IonRow, {\n    className: \"ion-text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    fill: \"clear\",\n    color: \"dark\",\n    onClick: props.onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"secondary\",\n    expand: \"block\",\n    onClick: saveHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Save\"))))));\n};\n\nexport default EditModal;","map":{"version":3,"sources":["/Users/kai-tenglo/Desktop/lighthouse/starting-project/src/components/EditModal.tsx"],"names":["React","useRef","useState","IonModal","IonToolbar","IonTitle","IonHeader","IonContent","IonButton","IonGrid","IonRow","IonCol","IonItem","IonLabel","IonInput","IonText","EditModal","props","error","setError","textRef","saveHandler","enteredText","current","value","toString","trim","length","onSave","show","editedGoal","text","onCancel"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport {\n  IonModal,\n  IonToolbar,\n  IonTitle,\n  IonHeader,\n  IonContent,\n  IonButton,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonItem,\n  IonLabel,\n  IonInput,\n  IonText,\n} from \"@ionic/react\";\nimport { text } from \"ionicons/icons\";\n\nconst EditModal: React.FC<{\n  show: boolean;\n  onCancel: () => void;\n  editedGoal: { id: string; text: string } | null;\n  onSave: (goalText: string) => void;\n}> = (props) => {\n  const [error, setError] = useState(\"\");\n  const textRef = useRef<HTMLIonInputElement>(null);\n\n  const saveHandler = () => {\n    const enteredText = textRef.current!.value;\n\n    if (!enteredText || enteredText.toString().trim().length === 0) {\n      setError(\"Please give it a valid title\");\n      return;\n    }\n    props.onSave(enteredText.toString());\n  };\n\n  return (\n    <IonModal isOpen={props.show}>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>{props.editedGoal ? \"Edit\" : \"Add\"} Goal</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonGrid>\n          <IonRow>\n            <IonCol>\n              <IonItem>\n                <IonLabel position=\"floating\">Your Goal</IonLabel>\n                <IonInput\n                  type=\"text\"\n                  value={props.editedGoal?.text}\n                  ref={textRef}\n                />\n              </IonItem>\n            </IonCol>\n          </IonRow>\n          {error && (\n            <IonRow>\n              <IonCol>\n                <IonText color=\"danger\">\n                  <p>{error}</p>\n                </IonText>\n              </IonCol>\n            </IonRow>\n          )}\n          <IonRow className=\"ion-text-center\">\n            <IonCol>\n              <IonButton fill=\"clear\" color=\"dark\" onClick={props.onCancel}>\n                Cancel\n              </IonButton>\n            </IonCol>\n            <IonCol>\n              <IonButton color=\"secondary\" expand=\"block\" onClick={saveHandler}>\n                Save\n              </IonButton>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonModal>\n  );\n};\n\nexport default EditModal;\n"]},"metadata":{},"sourceType":"module"}