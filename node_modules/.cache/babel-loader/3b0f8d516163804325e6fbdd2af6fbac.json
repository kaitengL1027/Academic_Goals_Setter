{"ast":null,"code":"var _jsxFileName = \"/Users/kai-tenglo/Desktop/lighthouse/starting-project/src/pages/CourseGoals.tsx\";\nimport { IonAlert, IonBackButton, IonButton, IonButtons, IonContent, IonFab, IonFabButton, IonHeader, IonIcon, IonList, IonPage, IonTitle, IonToast, IonToolbar, isPlatform } from \"@ionic/react\";\nimport { addOutline } from \"ionicons/icons\";\nimport React, { useState, useRef, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditModal from \"../components/EditModal\";\nimport EditableGoalItem from \"../components/EditableGoalItem\";\nimport CoursesContext from \"../data/courses-context\";\n\nconst CourseGoals = () => {\n  const [startedDeleting, setStartedDeleting] = useState(false);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedGoal, setSelectedGoal] = useState();\n  const slidingOptionsRef = useRef(null);\n  const selectedCourseId = useParams().courseId;\n  const coursesCtx = useContext(CoursesContext);\n  const selectedCourse = coursesCtx.courses.find(c => c.id === selectedCourseId);\n\n  const startDeleteHandler = () => {\n    setStartedDeleting(true);\n  };\n\n  const deleteGoalHandler = () => {\n    setStartedDeleting(false);\n    setToastMessage(\"Deleted Goal!\");\n  }; // startEditGoalHandler has an argument that is sent by onClick event in EditableGoalItem.tsx, \n  // goalId was later prepended by the bind() operation as startEditGoalHandler 1st argument (always prepend using bind()). \n  // Therefore, goalId is set as a parameter to startEditGoalHandler later on, no need to configure typescript in EditableGoalItem\n\n\n  const startEditGoalHandler = (goalId, event) => {\n    var _slidingOptionsRef$cu;\n\n    event.stopPropagation();\n    const goal = selectedCourse === null || selectedCourse === void 0 ? void 0 : selectedCourse.goals.find(g => g.id === goalId);\n    (_slidingOptionsRef$cu = slidingOptionsRef.current) === null || _slidingOptionsRef$cu === void 0 ? void 0 : _slidingOptionsRef$cu.closeOpened();\n\n    if (!goal) {\n      return;\n    }\n\n    setIsEditing(true);\n    setSelectedGoal(goal);\n  };\n\n  const startAddGoalHandler = () => {\n    setIsEditing(true);\n    setSelectedGoal(null);\n  };\n\n  const cancelEditGoalHandler = () => {\n    setIsEditing(false);\n    setSelectedGoal(null);\n  };\n\n  const addGoalHandler = text => {\n    coursesCtx.addGoal(selectedCourseId, text);\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EditModal, {\n    show: isEditing,\n    onCancel: cancelEditGoalHandler,\n    editedGoal: selectedGoal,\n    onSave: addGoalHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IonToast, {\n    isOpen: !!toastMessage,\n    message: toastMessage,\n    duration: 2000,\n    onDidDismiss: () => setToastMessage(\"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: startedDeleting,\n    header: \"Are you sure?\",\n    message: \"Do you want to delete the goal? This cannot be undone.\",\n    buttons: [{\n      text: \"No\",\n      role: \"cancel\",\n      handler: () => {\n        setStartedDeleting(false);\n      }\n    }, {\n      text: \"Yes\",\n      handler: deleteGoalHandler\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonBackButton, {\n    defaultHref: \"/courses/list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, selectedCourse ? selectedCourse.title : \"No course found!\"), !isPlatform(\"android\") && /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    onClick: startAddGoalHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    icon: addOutline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, selectedCourse && /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, selectedCourse.goals.map(goal => /*#__PURE__*/React.createElement(EditableGoalItem, {\n    key: goal.id,\n    slidingRef: slidingOptionsRef,\n    text: goal.text,\n    onStartDelete: startDeleteHandler,\n    onStartEdit: startEditGoalHandler.bind(null, goal.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }))), isPlatform(\"android\") && /*#__PURE__*/React.createElement(IonFab, {\n    horizontal: \"end\",\n    vertical: \"bottom\",\n    slot: \"fixed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonFabButton, {\n    color: \"secondary\",\n    onClick: startAddGoalHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: addOutline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default CourseGoals;","map":{"version":3,"sources":["/Users/kai-tenglo/Desktop/lighthouse/starting-project/src/pages/CourseGoals.tsx"],"names":["IonAlert","IonBackButton","IonButton","IonButtons","IonContent","IonFab","IonFabButton","IonHeader","IonIcon","IonList","IonPage","IonTitle","IonToast","IonToolbar","isPlatform","addOutline","React","useState","useRef","useContext","useParams","EditModal","EditableGoalItem","CoursesContext","CourseGoals","startedDeleting","setStartedDeleting","toastMessage","setToastMessage","isEditing","setIsEditing","selectedGoal","setSelectedGoal","slidingOptionsRef","selectedCourseId","courseId","coursesCtx","selectedCourse","courses","find","c","id","startDeleteHandler","deleteGoalHandler","startEditGoalHandler","goalId","event","stopPropagation","goal","goals","g","current","closeOpened","startAddGoalHandler","cancelEditGoalHandler","addGoalHandler","text","addGoal","role","handler","title","map","bind"],"mappings":"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","sourcesContent":["import {\n  IonAlert,\n  IonBackButton,\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonFab,\n  IonFabButton,\n  IonHeader,\n  IonIcon,\n  IonList,\n  IonPage,\n  IonTitle,\n  IonToast,\n  IonToolbar,\n  isPlatform,\n} from \"@ionic/react\";\nimport { addOutline } from \"ionicons/icons\";\nimport React, { useState, useRef, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditModal from \"../components/EditModal\";\nimport EditableGoalItem from \"../components/EditableGoalItem\";\nimport CoursesContext from \"../data/courses-context\";\n\nconst CourseGoals: React.FC = () => {\n  const [startedDeleting, setStartedDeleting] = useState(false);\n  const [toastMessage, setToastMessage] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedGoal, setSelectedGoal] = useState();\n\n  const slidingOptionsRef = useRef<HTMLIonItemSlidingElement>(null);\n\n  const selectedCourseId = useParams<{ courseId: string }>().courseId;\n\n  const coursesCtx = useContext(CoursesContext);\n\n  const selectedCourse = coursesCtx.courses.find((c) => c.id === selectedCourseId);\n\n  const startDeleteHandler = () => {\n    setStartedDeleting(true);\n  };\n\n  const deleteGoalHandler = () => {\n    setStartedDeleting(false);\n    setToastMessage(\"Deleted Goal!\");\n  };\n\n  // startEditGoalHandler has an argument that is sent by onClick event in EditableGoalItem.tsx, \n  // goalId was later prepended by the bind() operation as startEditGoalHandler 1st argument (always prepend using bind()). \n  // Therefore, goalId is set as a parameter to startEditGoalHandler later on, no need to configure typescript in EditableGoalItem\n  const startEditGoalHandler = (goalId: string, event: React.MouseEvent) => {\n    event.stopPropagation();\n    const goal = selectedCourse?.goals.find((g) => g.id === goalId);\n    slidingOptionsRef.current?.closeOpened();\n    if (!goal) {\n      return;\n    }\n    setIsEditing(true);\n    setSelectedGoal(goal);\n  };\n\n  const startAddGoalHandler = () => {\n    setIsEditing(true);\n    setSelectedGoal(null);\n  };\n\n  const cancelEditGoalHandler = () => {\n    setIsEditing(false);\n    setSelectedGoal(null);\n  };\n\n  const addGoalHandler = (text: string) => {\n    coursesCtx.addGoal(selectedCourseId, text);\n    setIsEditing(false);\n  };\n\n  return (\n    <React.Fragment>\n      <EditModal\n        show={isEditing}\n        onCancel={cancelEditGoalHandler}\n        editedGoal={selectedGoal}\n        onSave={addGoalHandler}\n      />\n      <IonToast\n        isOpen={!!toastMessage}\n        message={toastMessage}\n        duration={2000}\n        onDidDismiss={() => setToastMessage(\"\")}\n      />\n      <IonAlert\n        isOpen={startedDeleting}\n        header=\"Are you sure?\"\n        message=\"Do you want to delete the goal? This cannot be undone.\"\n        buttons={[\n          {\n            text: \"No\",\n            role: \"cancel\",\n            handler: () => {\n              setStartedDeleting(false);\n            },\n          },\n          {\n            text: \"Yes\",\n            handler: deleteGoalHandler,\n          },\n        ]}\n      />\n      <IonPage>\n        <IonHeader>\n          <IonToolbar>\n            <IonButtons slot=\"start\">\n              <IonBackButton defaultHref=\"/courses/list\" />\n            </IonButtons>\n            <IonTitle>\n              {selectedCourse ? selectedCourse.title : \"No course found!\"}\n            </IonTitle>\n            {!isPlatform(\"android\") && (\n              <IonButtons slot=\"end\">\n                <IonButton onClick={startAddGoalHandler}>\n                  <IonIcon slot=\"icon-only\" icon={addOutline} />\n                </IonButton>\n              </IonButtons>\n            )}\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          {selectedCourse && (\n            <IonList>\n              {selectedCourse.goals.map((goal) => (\n                <EditableGoalItem\n                  key={goal.id}\n                  slidingRef={slidingOptionsRef}\n                  text={goal.text}\n                  onStartDelete={startDeleteHandler}\n                  onStartEdit={startEditGoalHandler.bind(null, goal.id)}\n                />\n              ))}\n            </IonList>\n          )}\n          {isPlatform(\"android\") && (\n            <IonFab horizontal=\"end\" vertical=\"bottom\" slot=\"fixed\">\n              <IonFabButton color=\"secondary\" onClick={startAddGoalHandler}>\n                <IonIcon icon={addOutline} />\n              </IonFabButton>\n            </IonFab>\n          )}\n        </IonContent>\n      </IonPage>\n    </React.Fragment>\n  );\n};\n\nexport default CourseGoals;\n"]},"metadata":{},"sourceType":"module"}