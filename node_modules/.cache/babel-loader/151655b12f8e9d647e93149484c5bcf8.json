{"ast":null,"code":"var _jsxFileName = \"/Users/kai-tenglo/Desktop/lighthouse/starting-project/src/data/CoursesContextProvider.tsx\";\nimport React, { useState } from 'react';\nimport CoursesContext from './courses-context';\n\nconst CoursesContextProvider = props => {\n  const [courses, setCourses] = useState([{\n    id: 'c1',\n    title: 'React - The Complete Guide',\n    enrolled: new Date(),\n    goals: []\n  }]);\n\n  const addCourse = (title, date) => {\n    const newCourse = {\n      id: Math.random().toString(),\n      title,\n      enrolled: date,\n      goals: []\n    };\n    setCourses(prev => prev.concat(newCourse));\n  };\n\n  const addGoal = (courseId, text) => {\n    const newGoal = {\n      id: Math.random().toString(),\n      text\n    };\n    setCourses(prevCourses => {\n      const updatedCourses = [...prevCourses];\n      const updatedCourseIndex = updatedCourses.findIndex(course => course.id === courseId);\n      const updatedCourseGoals = updatedCourses[updatedCourseIndex].goals.concat(newGoal);\n      const updatedCourse = { ...updatedCourses[updatedCourseIndex]\n      };\n      updatedCourse.goals = updatedCourseGoals;\n      updatedCourses[updatedCourseIndex] = updatedCourse;\n      return updatedCourses;\n    });\n  };\n\n  const deleteGoal = (courseId, goalId) => {\n    setCourses(prevCourses => {\n      const updatedCourses = [...prevCourses];\n      const updatedCourseIndex = updatedCourses.findIndex(course => course.id === courseId);\n      const updatedCourseGoals = updatedCourses[updatedCourseIndex].goals.filter(goal => goal.id !== goalId);\n      const updatedCourse = { ...updatedCourses[updatedCourseIndex]\n      };\n      updatedCourse.goals = updatedCourseGoals;\n      updatedCourses[updatedCourseIndex] = updatedCourse;\n      return updatedCourses;\n    });\n  };\n\n  const updateGoal = (courseId, goalId, newText) => {\n    setCourses(prevCourses => {\n      const updatedCourses = [...prevCourses];\n      const updatedCourseIndex = updatedCourses.findIndex(course => course.id === courseId);\n      const updatedCourseGoals = updatedCourses[updatedCourseIndex].goals.slice(); //.slice() returns a copy of the array\n\n      const updatedCourseGoalIndex = updatedCourseGoals.findIndex(goal => goal.id === goalId);\n      const updatedGoal = { ...updatedCourseGoals[updatedCourseGoalIndex],\n        text: newText\n      };\n      updatedCourseGoals[updatedCourseGoalIndex] = updatedGoal;\n      const updatedCourse = { ...updatedCourses[updatedCourseIndex]\n      };\n      updatedCourse.goals = updatedCourseGoals;\n      updatedCourses[updatedCourseIndex] = updatedCourse;\n      return updatedCourses;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(CoursesContext.Provider, {\n    value: {\n      courses,\n      addGoal,\n      addCourse,\n      deleteGoal,\n      updateGoal\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  }, props.children);\n};\n\nexport default CoursesContextProvider;","map":{"version":3,"sources":["/Users/kai-tenglo/Desktop/lighthouse/starting-project/src/data/CoursesContextProvider.tsx"],"names":["React","useState","CoursesContext","CoursesContextProvider","props","courses","setCourses","id","title","enrolled","Date","goals","addCourse","date","newCourse","Math","random","toString","prev","concat","addGoal","courseId","text","newGoal","prevCourses","updatedCourses","updatedCourseIndex","findIndex","course","updatedCourseGoals","updatedCourse","deleteGoal","goalId","filter","goal","updateGoal","newText","slice","updatedCourseGoalIndex","updatedGoal","children"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport CoursesContext, { Course, Goal } from './courses-context';\n\nconst CoursesContextProvider: React.FC = (props) => {\n  const [courses, setCourses] = useState<Course[]>([\n    {\n      id: 'c1', \n      title: 'React - The Complete Guide', \n      enrolled: new Date(),\n      goals: []\n    }\n  ]);\n\n  const addCourse = (title: string, date: Date) => {\n    const newCourse: Course = {\n      id: Math.random().toString(), \n      title, \n      enrolled: date, \n      goals: []\n    };\n    setCourses(prev => prev.concat(newCourse));\n  };\n\n  const addGoal = (courseId: string, text: string) => {\n    const newGoal: Goal = {\n      id: Math.random().toString(),\n      text\n    };\n\n    setCourses(prevCourses => {\n      const updatedCourses = [...prevCourses];\n      const updatedCourseIndex = updatedCourses.findIndex(course => course.id === courseId);\n      const updatedCourseGoals = updatedCourses[updatedCourseIndex].goals.concat(newGoal);\n      const updatedCourse = { ...updatedCourses[updatedCourseIndex] };\n      updatedCourse.goals = updatedCourseGoals;\n      updatedCourses[updatedCourseIndex] = updatedCourse;\n\n      return updatedCourses;\n    });\n  };\n\n  const deleteGoal = (courseId: string, goalId: string) => {\n    setCourses(prevCourses => {\n      const updatedCourses = [...prevCourses];\n      const updatedCourseIndex = updatedCourses.findIndex(course => course.id === courseId);\n      const updatedCourseGoals = updatedCourses[updatedCourseIndex].goals.filter(goal => goal.id !== goalId);\n      const updatedCourse = { ...updatedCourses[updatedCourseIndex] };\n      updatedCourse.goals = updatedCourseGoals;\n      updatedCourses[updatedCourseIndex] = updatedCourse;\n\n      return updatedCourses;\n    });\n  };\n\n  const updateGoal = (courseId: string, goalId: string, newText: string) => {\n    setCourses(prevCourses => {\n      const updatedCourses = [...prevCourses];\n      const updatedCourseIndex = updatedCourses.findIndex(course => course.id === courseId);\n      const updatedCourseGoals = updatedCourses[updatedCourseIndex].goals.slice(); //.slice() returns a copy of the array\n      const updatedCourseGoalIndex = updatedCourseGoals.findIndex(goal => goal.id === goalId);\n      const updatedGoal = { ...updatedCourseGoals[updatedCourseGoalIndex], text: newText };\n      updatedCourseGoals[updatedCourseGoalIndex] = updatedGoal;\n      const updatedCourse = { ...updatedCourses[updatedCourseIndex] };\n      updatedCourse.goals = updatedCourseGoals;\n      updatedCourses[updatedCourseIndex] = updatedCourse;\n\n      return updatedCourses;\n    });\n  };\n\n  return <CoursesContext.Provider value={{courses, addGoal, addCourse, deleteGoal, updateGoal}} >{props.children}</CoursesContext.Provider>;\n};\n\nexport default CoursesContextProvider;"]},"metadata":{},"sourceType":"module"}